{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Test/src/Exitpage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapDialog = styled(Dialog)(({\n  theme\n}) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2)\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"contained\",\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: \"absolute\",\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n}; // const PriceCalculate = () => {\n//   let current = new Date();\n//   let arr = exitInfo.slotInfo.entry_time.split(\":\");\n//   console.log(\n//     exitInfo.slotInfo.entry_time,\n//     arr,\n//     \"exitInfo\",\n//     current.toLocaleTimeString(),\n//     current.getTime(),\n//     current,\n//     current.getHours()\n//   );\n// };\n\nexport default function Exitpage(exitInfo) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const Paybutton = () => {\n    alert(\"payment Done\");\n  };\n\n  let current = new Date();\n  let arr = exitInfo.slotInfo.entry_time.split(\":\");\n  let entryTime = exitInfo.slotInfo.entry_time.replace(\":\", \".\");\n  let exitTime = current.getHours() + \".\" + current.getMinutes();\n  console.log(exitInfo.slotInfo.entry_time, arr, entryTime, \"exitInfo\", exitTime, current.getMinutes(), current.getHours());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleClickOpen,\n      children: \"Exit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapDialog, {\n      onClose: open,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(BootstrapDialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: \"Paymnet details need to show here !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: Paybutton,\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Exitpage, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = Exitpage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"Exitpage\");","map":{"version":3,"sources":["/home/user/Desktop/Test/src/Exitpage.js"],"names":["React","PropTypes","Button","styled","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","Typography","BootstrapDialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","palette","grey","propTypes","node","func","isRequired","Exitpage","exitInfo","open","setOpen","useState","handleClickOpen","handleClose","Paybutton","alert","current","Date","arr","slotInfo","entry_time","split","entryTime","replace","exitTime","getHours","getMinutes","console","log"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          variant=\"contained\"\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\n// const PriceCalculate = () => {\n//   let current = new Date();\n//   let arr = exitInfo.slotInfo.entry_time.split(\":\");\n//   console.log(\n//     exitInfo.slotInfo.entry_time,\n//     arr,\n//     \"exitInfo\",\n//     current.toLocaleTimeString(),\n//     current.getTime(),\n//     current,\n//     current.getHours()\n//   );\n// };\n\nexport default function Exitpage(exitInfo) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const Paybutton = () => {\n    alert(\"payment Done\");\n  };\n\n  let current = new Date();\n  let arr = exitInfo.slotInfo.entry_time.split(\":\");\n  let entryTime = exitInfo.slotInfo.entry_time.replace(\":\",\".\");\n  let exitTime = current.getHours() + \".\" + current.getMinutes()\n  console.log(\n    exitInfo.slotInfo.entry_time,\n    arr,\n    entryTime,\n    \"exitInfo\",\n    exitTime,\n    current.getMinutes(),\n    current.getHours()\n  );\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        Exit\n      </Button>\n      <BootstrapDialog\n        onClose={open}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Payment Details\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          Paymnet details need to show here !\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={Paybutton}>\n            Pay\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}