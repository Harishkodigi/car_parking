{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Assignnment/src/Bookingform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport toastr from \"toastr\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Container, Typography, Paper } from \"@material-ui/core\";\nimport Parkingslots from \"./Parkingslots\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bookingAction } from \"./actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookingform = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const parking_slotlist = useSelector(state => state);\n  const [formData, setFormData] = useState({\n    vehicle_number: \"\",\n    entry_time: \"\",\n    number_slot: 0,\n    isBooked: true\n  });\n\n  const handleFormInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    formData[name] = name === \"number_slot\" ? Number(value) : value;\n    setFormData(formData);\n  };\n\n  const handleResetFormInput = e => {\n    let formData = {\n      vehicle_number: \"\",\n      entry_time: \"\",\n      number_slot: 0,\n      isBooked: true\n    };\n    console.log(formData, \"reset\", parking_slotlist);\n    setFormData(formData);\n  };\n\n  const handleBooking = e => {\n    console.log(parking_slotlist, \"parking_slotlist\");\n    const result = parking_slotlist.value.find(element => element.number_slot === formData.number_slot);\n    const checkAllSlot = parking_slotlist.value.filter(element => element.isBooked === false);\n\n    if (checkAllSlot.length === 0) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000\n      };\n      setTimeout(() => toastr.warning(`all slots are booked `), 10);\n    } else if (result === undefined) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000\n      };\n      setTimeout(() => toastr.warning(`select available slot only `), 10);\n    } else if (result.isBooked === true) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000\n      };\n      setTimeout(() => toastr.warning(`Already Booked`), 10);\n    } else if (result.isBooked === false) {\n      dispatch(bookingAction(formData));\n      handleResetFormInput();\n    }\n  }; //const dispatch = useDispatch();\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      padding: 16,\n      margin: \"auto\",\n      maxWidth: 800\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      component: \"h1\",\n      style: {\n        padding: 16\n      },\n      children: \"Parking Lot Management System !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-start\",\n          alignItems: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Vehicle Number\",\n              color: \"secondary\",\n              variant: \"outlined\",\n              type: \"Text\",\n              name: \"vehicle_number\",\n              fullWidth: true,\n              onChange: handleFormInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Entry Time\",\n              color: \"secondary\",\n              variant: \"outlined\",\n              fullWidth: true,\n              type: \"time\",\n              name: \"entry_time\",\n              defaultValue: \"00:00:00\",\n              onChange: handleFormInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"number_slot\",\n              color: \"secondary\",\n              variant: \"outlined\",\n              type: \"Number\",\n              name: \"number_slot\",\n              fullWidth: true,\n              onChange: handleFormInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-evenly\",\n            alignItems: \"center\",\n            style: {\n              padding: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              onClick: () => handleBooking() //onClick={() => dispatch(bookingAction(formData))}\n              ,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              type: \"button\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Parkingslots, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bookingform, \"GAKJ1/TtIipctZPs7pWEAvQuizk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Bookingform;\nexport default Bookingform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookingform\");","map":{"version":3,"sources":["/home/user/Desktop/Assignnment/src/Bookingform.js"],"names":["React","useState","toastr","Grid","TextField","Button","Container","Typography","Paper","Parkingslots","useDispatch","useSelector","bookingAction","Bookingform","dispatch","parking_slotlist","state","formData","setFormData","vehicle_number","entry_time","number_slot","isBooked","handleFormInput","e","name","value","target","Number","handleResetFormInput","console","log","handleBooking","result","find","element","checkAllSlot","filter","length","options","positionClass","hideDuration","timeOut","setTimeout","warning","undefined","padding","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport toastr from \"toastr\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Container, Typography, Paper } from \"@material-ui/core\";\nimport Parkingslots from \"./Parkingslots\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bookingAction } from \"./actions\";\n\nconst Bookingform = () => {\n  const dispatch = useDispatch();\n  const parking_slotlist = useSelector((state) => state);\n  const [formData, setFormData] = useState({\n    vehicle_number: \"\",\n    entry_time: \"\",\n    number_slot: 0,\n    isBooked: true,\n  });\n\n  const handleFormInput = (e) => {\n    const { name, value } = e.target;\n    formData[name] = name === \"number_slot\" ? Number(value) : value;\n    setFormData(formData);\n  };\n\n  const handleResetFormInput = (e) => {\n    let formData = {\n      vehicle_number: \"\",\n      entry_time: \"\",\n      number_slot: 0,\n      isBooked: true,\n    };\n    console.log(formData,\"reset\",parking_slotlist)\n    setFormData(formData);\n  };\n\n  const handleBooking = (e) => {\n    console.log(parking_slotlist, \"parking_slotlist\");\n    const result = parking_slotlist.value.find(\n      (element) => element.number_slot === formData.number_slot\n    );\n    const checkAllSlot = parking_slotlist.value.filter(\n      (element) => element.isBooked === false\n    );\n\n    if (checkAllSlot.length === 0) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000,\n      };\n      setTimeout(() => toastr.warning(`all slots are booked `), 10);\n    } else if (result === undefined) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000,\n      };\n      setTimeout(() => toastr.warning(`select available slot only `), 10);\n    } else if (result.isBooked === true) {\n      toastr.options = {\n        positionClass: \"toast-top-full-width\",\n        hideDuration: 300,\n        timeOut: 1000,\n      };\n      setTimeout(() => toastr.warning(`Already Booked`), 10);\n    } else if (result.isBooked === false) {\n      dispatch(bookingAction(formData));\n       handleResetFormInput()\n    }\n  };\n\n  //const dispatch = useDispatch();\n  return (\n    <Container style={{ padding: 16, margin: \"auto\", maxWidth: 800 }}>\n      <Typography\n        variant=\"h4\"\n        align=\"center\"\n        component=\"h1\"\n        style={{ padding: 16 }}\n      >\n        Parking Lot Management System !\n      </Typography>\n      <Grid>\n        <Paper style={{ padding: 16 }}>\n          <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Vehicle Number\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                type=\"Text\"\n                name=\"vehicle_number\"\n                fullWidth\n                onChange={handleFormInput}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                label=\"Entry Time\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                fullWidth\n                type=\"time\"\n                name=\"entry_time\"\n                defaultValue=\"00:00:00\"\n                onChange={handleFormInput}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                label=\"number_slot\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                type=\"Number\"\n                name=\"number_slot\"\n                fullWidth\n                onChange={handleFormInput}\n              />\n            </Grid>\n\n            <Grid\n              container\n              justify=\"space-evenly\"\n              alignItems=\"center\"\n              style={{ padding: 16 }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                onClick={() => handleBooking()}\n                //onClick={() => dispatch(bookingAction(formData))}\n              >\n                Submit\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" type=\"button\">\n                Reset\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Parkingslots />\n    </Container>\n  );\n};\n\nexport default Bookingform;\n"]},"metadata":{},"sourceType":"module"}